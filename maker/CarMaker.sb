' Brush Maker - Shapes Generator
' Version 0.1
' Copyright Â© 2017 Nonki Takahashi.  The MIT License.
' Last update 2017-10-11

GraphicsWindow.Title = "Car Maker 0.1"
Init()
' ground
GraphicsWindow.BrushColor = "Gray"
GraphicsWindow.FillRectangle(0, 400, gw, gh - 400)
light = "#FFFFCC"
car = "#6495ED"     ' CornflowerBlue
silver = "#C0C0C0"  ' Silver
pillar = 8
'Goto front

' side ---------------------------------------------------------
' light
bc = light
x = 112.5
y = 250
width = 50
height = 50
Shapes_AddEllipse()
' top
bc = "#99000000"
x = 250
y = 150
x1 = 50
y1 = 0
x2 = 0
y2 = 100
x3 = 50
y3 = 100
Shapes_AddTriangle()
x = 300
y = 150
width = 175
height = 100
Shapes_AddRectangle()
x = 475
y = 150
x1 = 0
y1 = 0
x2 = 0
y2 = 100
x3 = 25
y3 = 100
Shapes_AddTriangle()
' tail lump
bc = "#99FF0000"
x = 500
y = 250
width = 50
height = 50
Shapes_AddEllipse()
' body
bc = car
x = 125
y = 250
width = 100
height = 100
Shapes_AddEllipse()
x = 175
y = 250
width = 350
height = 50
Shapes_AddRectangle()
x = 125
y = 300
width = 400
height = 50
Shapes_AddRectangle()
' roof
pw = pillar
pc = car
x = 300
y = 150
x1 = 0
y1 = 0
x2 = 175
y2 = 0
Shapes_AddLine()
x = 300 - pillar / 2
y = 150 - pillar / 2
width = pillar
height = pillar
pw = 0
Shapes_AddEllipse()
x = 475 - pillar / 2
Shapes_AddEllipse()
' pillar
pw = pillar
x = 250
y = 150
x1 = 50
y1 = 0
x2 = 0
y2 = 100
Shapes_AddLine()
bc = car
pw = 0
x = 250 - pillar / 2
y = 250 - pillar / 2
Shapes_AddEllipse()
pw = pillar
x = 375
y = 150
x1 = 0
y1 = 0
x2 = 0
y2 = 100
Shapes_AddLine()
x = 450
y2 = 0
Shapes_AddLine()
x = 475
x2 = 25
y2 = 100
Shapes_AddLine()
bc = car
pw = 0
x = 500 - pillar / 2
y = 250 - pillar / 2
Shapes_AddEllipse()
' wheels
pc = "#333333"
bc = silver
pw = 20
x = 150
y = 300
width = 100
height = 100
Shapes_AddEllipse()
x = 400
Shapes_AddEllipse()
' bumpers
pw = 0
x = 100
y = 330
width = 40
height = 20
Shapes_AddRectangle()
x = 510
Shapes_AddRectangle()
Goto dump

' front --------------------------------------------------------
front:
' top
bc = "#99000000"
x = 625
y = 150
x1 = 25
y1 = 0
x2 = 0
y2 = 100
x3 = 25
y3 = 100
Shapes_AddTriangle()
x = 650
y = 150
width = 200
height = 100
Shapes_AddRectangle()
x = 850
x1 = 0
Shapes_AddTriangle()
' roof
pw = pillar
pc = car
x = 0
y = 0
x1 = 650
y1 = 150
x2 = 850
y2 = 150
Shapes_AddLine()
pw = 0
bc = car
x = 650 - pillar / 2
y = 150 - pillar / 2
width = pillar
height = pillar
Shapes_AddEllipse()
x = 850 - pillar / 2
Shapes_AddEllipse()
' pillar
pw = pillar
pc = car
x = 0
y = 0
x1 = 650
y1 = 150
x2 = 625
y2 = 250
Shapes_AddLine()
x1 = 850
x2 = 875
Shapes_AddLine()
pw = 0
x = 625 - pw / 2
y = 250 - pw / 2
width = pw
height = pw
Shapes_AddEllipse()
x = 875 - pw / 2
Shapes_AddEllipse()
' body
bc = car
x = 600
y = 250
width = 50
height = 50
Shapes_AddEllipse()
x = 850
Shapes_AddEllipse()
x = 625
y = 250
width = 250
height = 25
Shapes_AddRectangle()
x = 600
y = 275
width = 300
height = 75
Shapes_AddRectangle()
bc = "#99000000"
x = 650
y = 305
width = 200
height = 5
Shapes_AddRectangle()
y = 315
Shapes_AddRectangle()
' light
bc = light
x = 625
y = 250
width = 50
height = 50
Shapes_AddEllipse()
x = 825
Shapes_AddEllipse()
' bumpers
bc = silver
x = 575
y = 330
width = 350
height = 20
Shapes_AddRectangle()
' wheels
bc = "#333333"
x = 600
y = 350
width = 50
height = 50
Shapes_AddRectangle()
x = 850
Shapes_AddRectangle()
' plate
bc = "#FFFFFF"
x = 700
y = 340
width = 100
height = 30
Shapes_AddRectangle()

dump:
Shapes_Normalize()
Shapes_DumpArray()

Sub Init
  gw = 998
  gh = 428
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  GraphicsWindow.BackgroundColor = "SkyBlue"
  GraphicsWindow.BrushColor = "Gray"
  iMin = 1
  iMax = iMin - 1
  pc = ""
  pw = 0
  bc = ""
  x = 0
  y = 0
  width = 0
  height = 0
  x1 = 0
  y1 = 0
  x2 = 0
  y2 = 0
  x3 = 0
  y3 = 0
  angle = 0
  fs = 12
  fn = "Trebuchet MS"
  fb = "False"
  fi = "False"
  txt = ""
  DrawGrid()
EndSub

Sub DrawGrid
  GraphicsWindow.PenColor = "#CCCCCC"
  For y = 0 To gh Step 50
    GraphicsWindow.DrawLine(0, y, gw, y)
  EndFor
  For x = 0 To gw Step 50
    GraphicsWindow.DrawLine(x, 0, x, gh)
  EndFor
  GraphicsWindow.PenColor = "#999999"
  For y = 0 To gh Step 100
    GraphicsWindow.DrawLine(0, y, gw, y)
    GraphicsWindow.DrawText(2, y + 2, y)
  EndFor
  For x = 0 To gw Step 100
    GraphicsWindow.DrawLine(x, 0, x, gh)
    GraphicsWindow.DrawText(x + 2, 2, x)
  EndFor
EndSub

Sub Shapes_AddEllipse
  ' param x, y - top left position
  ' param width
  ' param height
  Shapes_EntryClear()
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  func = "ell"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  Shapes_EntryToArray()
EndSub

Sub Shapes_AddLine
  ' param x1, y1 - first point
  ' param x2, y2 - second point
  Shapes_EntryClear()
  Shapes_PenToEntry()
  func = "line"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  Shapes_EntryToArray()
EndSub

Sub Shapes_AddRectangle
  ' param x, y - top left position
  ' param width
  ' param height
  Shapes_EntryClear()
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  func = "rect"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  Shapes_EntryToArray()
EndSub

Sub Shapes_AddText
  ' param x, y - top left position
  ' param txt - text
  Shapes_EntryClear()
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  Shapes_FontToEntry()
  func = "text"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  Shapes_EntryToArray()
EndSub

Sub Shapes_AddTriangle
  ' param x1, y1 - first point
  ' param x2, y2 - second point
  ' param x3, y3 - third point
  Shapes_EntryClear()
  Shapes_PenToEntry()
  Shapes_BrushToEntry()
  func = "tri"
  Shapes_FuncToEntry()
  Shapes_MoveToEntry()
  Shapes_RotateToEntry()
  Shapes_EntryToArray()
EndSub

Sub Shapes_BrushToEntry
  GraphicsWindow.BrushColor = bc
  shp["bc"] = bc
EndSub

Sub Shapes_DumpArray
  order = "1=func;2=x;3=y;4=width;5=height;6=x1;7=y1;8=x2;9=y2;"
  order = order + "10=x3;11=y3;12=txt;13=fn;14=fs;15=fb;16=fi;"
  order = order + "17=pw;18=pc;19=bc;"
  nOrder = Array.GetItemCount(order)
  WQ = Text.GetCharacter(34)
  LF = Text.GetCharacter(10)
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontName = "Consolas"
  GraphicsWindow.FontSize = 14
  tbox = Controls.AddMultiLineTextBox(gw / 2, 10)
  Controls.SetSize(tbox, gw / 2 - 10, gh - 20)
  buf = "  shX = " + shX + " ' x offset" + LF
  buf = buf + "  shY = " + shY + " ' y offset" + LF
  buf = buf + "  shape = " + WQ + WQ + LF
  For i = iMin To iMax
    buf = buf + "  shape[" + i + "] = " + WQ
    shp = shape[i]
    For j = 1 To nOrder
      If shp[order[j]] <> "" Then
        buf = buf + order[j] + "=" + shp[order[j]] + ";"
      EndIf
    EndFor
    buf = buf + WQ + LF
  EndFor
  Controls.SetTextBoxText(tbox, buf)
  Shapes.SetOpacity(tbox, 50)
EndSub

Sub Shapes_EntryClear
  shp = ""
EndSub

Sub Shapes_EntryToArray
  iMax = iMax + 1
  shape[iMax] = shp
EndSub

Sub Shapes_FontToEntry
  GraphicsWindow.FontSize = fs
  shp["fs"] = fs
  GraphicsWindow.FontName = fn
  shp["fn"] = fn
  GraphicsWindow.FontBold = fb
  shp["fb"] = fb
  GraphicsWindow.FontItalic = fi
  shp["fi"] = fi
EndSub

Sub Shapes_FuncToEntry
  shp["func"] = func
  If func = "ell" Then
    obj = Shapes.AddEllipse(width, height)
    shp["width"] = Math.Floor(width * 100) / 100
    shp["height"] = Math.Floor(height * 100) / 100
  ElseIf func = "rect" Then
    obj = Shapes.AddRectangle(width, height)
    shp["width"] = Math.Floor(width * 100) / 100
    shp["height"] = Math.Floor(height * 100) / 100
  ElseIf func = "tri" Then
    obj = Shapes.AddTriangle(x1, y1, x2, y2, x3, y3)
    shp["x1"] = Math.Floor(x1 * 100) / 100
    shp["y1"] = Math.Floor(y1 * 100) / 100
    shp["x2"] = Math.Floor(x2 * 100) / 100
    shp["y2"] = Math.Floor(y2 * 100) / 100
    shp["x3"] = Math.Floor(x3 * 100) / 100
    shp["y3"] = Math.Floor(y3 * 100) / 100
  ElseIf func = "line" Then
    obj = Shapes.AddLine(x1, y1, x2, y2)
    shp["x1"] = Math.Floor(x1 * 100) / 100
    shp["y1"] = Math.Floor(y1 * 100) / 100
    shp["x2"] = Math.Floor(x2 * 100) / 100
    shp["y2"] = Math.Floor(y2 * 100) / 100
  ElseIf func = "text" Then
    obj = Shapes.AddText(txt)
    shp["text"] = txt
  EndIf
EndSub

Sub Shapes_MoveToEntry
  Shapes.Move(obj, x, y)
  shp["x"] = Math.Floor(x * 100) / 100
  shp["y"] = Math.Floor(y * 100) / 100
EndSub

Sub Shapes_Normalize
  For i = 1 To iMax
    shp = shape[i]
    If Text.IsSubText("line|tri", shp["func"]) Then
      xmin = shp["x1"]
      ymin = shp["y1"]
      If shp["x2"] < xmin Then
        xmin = shp["x2"]
      EndIf
      If shp["y2"] < ymin Then
        ymin = shp["y2"]
      EndIf
      If shp["func"] = "tri" Then
        If shp["x3"] < xmin Then
          xmin = shp["x3"]
        EndIf
        If shp["y3"] < ymin Then
          ymin = shp["y3"]
        EndIf
        shp["x3"] = shp["x3"] - xmin
        shp["y3"] = shp["y3"] - ymin
      EndIf
      shp["x"] = shp["x"] + xmin
      shp["y"] = shp["y"] + ymin
      shp["x1"] = shp["x1"] - xmin
      shp["y1"] = shp["y1"] - ymin
      shp["x2"] = shp["x2"] - xmin
      shp["y2"] = shp["y2"] - ymin
      shape[i] = shp
    EndIf
  EndFor
  If 0 < iMax Then
    shp = shape[1]
    xmin = shp["x"]
    ymin = shp["y"]
    xmax = shp["x"]
    ymax = shp["y"]
  EndIf
  For i = 2 To iMax
    shp = shape[i]
    If shp["x"] < xmin Then
      xmin = shp["x"]
    EndIf
    If shp["y"] < ymin Then
      ymin = shp["y"]
    EndIf
    If xmax < shp["x"] Then
      xmax = shp["x"]
    EndIf
    If ymax < shp["y"] Then
      ymax = shp["y"]
    EndIf
  EndFor
  shX = xmin
  shY = ymin
  For i = 1 To iMax
    shp = shape[i]
    shp["x"] = shp["x"] - xmin
    shp["y"] = shp["y"] - ymin
    If shp["angle"] = 0 Then
      shp["angle"] = ""
    EndIf
    shape[i] = shp
  EndFor
EndSub

Sub Shapes_PenToEntry
  GraphicsWindow.PenWidth = pw
  shp["pw"] = pw
  If 0 < pw Then 
    GraphicsWindow.PenColor = pc
    shp["pc"] = pc
  EndIf
EndSub

Sub Shapes_RotateToEntry
  If angle <> 0 Then
    Shapes.Rotate(obj, angle)
    shp["angle"] = Math.Floor(angle * 100) / 100
  EndIf
EndSub
